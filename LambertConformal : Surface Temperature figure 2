from cartopy.mpl.gridliner import LONGITUDE_FORMATTER, LATITUDE_FORMATTER
import matplotlib.pyplot as plt
import cartopy.crs as ccrs
import cartopy.feature as cfeat
import numpy as np
import matplotlib.ticker as mticker
from matplotlib.ticker import MaxNLocator

fig=plt.figure(figsize=(10,8))
lonl=90
lonr=150
latb=0
latt=50
ngridsx=lonr-lonl
ngridsy=latt-latb

c_lon=120
c_lat=25
para_latt=30
para_latb=30

lon=np.linspace(lonl, lonr, ngridsx)
lat=np.linspace(latb, latt, ngridsy)
lon2d, lat2d = np.meshgrid(lon, lat)

data=np.cos(np.deg2rad(lat2d)*4)*np.sin(np.deg2rad(lon2d)*4)

levels=MaxNLocator(nbins=15).tick_values(data.min(), data.max())

proj=ccrs.LambertConformal(central_latitude=c_lat, central_longitude=c_lon, standard_parallels=(para_latb, para_latt))
ax=plt.axes(projection=proj)
cs=ax.pcolormesh(lon, lat, data, transform=ccrs.PlateCarree())

cbar=plt.colorbar(cs, shrink=0.90, orientation='horizontal', label='110601507', extend='both')

ax.contour(lon, lat, data, levels=levels, color='k', transform=ccrs.PlateCarree())

ax.add_feature(cfeat.NaturalEarthFeature(category='cultural', name='admin_1_states_provinces_lines', scale='50m', facecolor='none'))
ax.coastlines('50m')
ax.add_feature(cfeat.BORDERS)

#add map grid lines and length
gl=ax.gridlines(crs=ccrs.PlateCarree(),draw_labels=True, linewidth=2, color='black', alpha=0.5, linestyle='--')
gl.top_labels=True
gl.bot_labels=True
gl.left_labeld=True
gl.xlines=True
gl.ylines=True

gl.xlocator=mticker.FixedLocator(range(lonl, lonr, 10))

gl.xformatter=LONGITUDE_FORMATTER
gl.yformatter=LATITUDE_FORMATTER

gl.xlabel_style={'size':15, 'color':'gray'}
gl.xlabel_style={'color':'red', 'weight':'bold'}

gl.ylabel_style={'size':15, 'color':'gray'}
gl.ylabel_style={'color':'red', 'weight':'bold'}

plt.show()
